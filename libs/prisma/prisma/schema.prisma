// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  phone String @unique

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt()

  OwnedCourses CourseUser[]

  @@map("user")
}

model Otp {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  code      String
  phone     String
  isUsed    Boolean  @default(true)
  expiresIn DateTime @map("expires_in")

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt

  @@map("otp")
}

model Lesson {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  media_path  String
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt

  Course Course[]

  @@map("education")
}

model Course {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  episodeQty  Int
  media_path  String[]

  lessonId String @db.ObjectId
  lesson   Lesson @relation(fields: [lessonId], references: [id])

  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now()) @updatedAt

  episodes    Episode[]
  Course_Details Course_Details[]
  courseUsers    CourseUser[]

  @@map("course")
}

model Course_Details {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  courseId    String    @db.ObjectId
  course      Course    @relation(fields: [courseId], references: [id])
  description String
  text        String?
  media_path  String[]
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt

  @@map("course_details")
}

model CourseUser {
  userId   String   @db.ObjectId
  courseId String[] @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  course Course @relation(fields: [courseId], references: [id])

  id String @id @default(auto()) @map("_id") @db.ObjectId

  @@map("course_user")
}

model Episode {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  media_path  String[]
  
  courseId    String    @db.ObjectId
  course      Course    @relation(fields: [courseId], references: [id])
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt

  @@map("episode")
}


enum CourseType {
  TEXT
  IMAGE
  VIDEO
}
